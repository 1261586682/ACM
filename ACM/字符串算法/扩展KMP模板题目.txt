#include <bits/stdc++.h>
using namespace std;
const int len = 2e7 + 5;
int ext[len], extend[len];
string a, b;
int m, n;
void get_next()
{
    ext[0] = n;
    int l = -1, r = -1;
    for (int i = 1; i < n; ++i)
    {
        if (i > r)
        {
            while (i + ext[i] < n && b[ext[i]] == b[i + ext[i]])
                ext[i]++;
            l = i, r = i + ext[i] - 1;
        }
        else if (ext[i - l] < r - i + 1)
            ext[i] = ext[i - l];
        else
        {
            ext[i] = r - i + 1;
            while (i + ext[i] < n && b[ext[i]] == b[i + ext[i]])
                ext[i]++;
            l = i, r = i + ext[i] - 1;
        }
    }
}
void get_extend()
{
    int l = -1, r = -1;
    for (int i = 0; i < m; ++i)
    {
        if (i > r)
        {
            while (i + extend[i] < m && extend[i] < n && b[extend[i]] == a[i + extend[i]])
                extend[i]++;
            l = i, r = i + extend[i] - 1;
        }
        else if (ext[i - l] < r - i + 1)
            extend[i] = ext[i - l];
        else
        {
            extend[i] = r - i + 1;
            while (i + extend[i] < m && extend[i] < n && b[extend[i]] == a[i + extend[i]])
                extend[i]++;
            l = i, r = i + extend[i] - 1;
        }
    }
}
int main()
{
    memset(ext, 0, sizeof(ext));
    memset(extend, 0, sizeof(extend));
    cin >> a >> b;
    m = a.length(), n = b.length();
    get_next();
    get_extend();
    long long ans1 = 0, ans2 = 0;
    for (int i = 0; i < n; ++i)
        ans1 ^= 1LL*(i + 1) * (ext[i] + 1);
    for (int i = 0; i < m; ++i)
        ans2 ^= 1LL*(i + 1) * (extend[i] + 1);
    cout << ans1 << endl;
    cout << ans2 << endl;
    return 0;
}
//洛谷5410